<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\PurchaseBillRegister;
use Maatwebsite\Excel\Facades\Excel;














class PurchaseBillRegister implements FromCollection, WithHeadings
{


 function __construct($SGLID,$From_Date,$To_Date,$BranchGroup,$BranchName,$ITEMGID,$ITEMID,$STATUS,$CYID_REF) {
        $this->ITEMID = $ITEMID;
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;
        $this->ITEMGID = $ITEMGID;
        $this->STATUS = $STATUS;
        $this->CYID = $CYID_REF;
        $this->SGLID = $SGLID;
 
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

        //dd($this->From_Date); 
        
        $ITEMID=implode(",",$this->ITEMID);        
        $BranchName=implode(",",$this->BranchName);      
        $ITEMGID=implode(",",$this->ITEMGID);
        $ITEMGID=implode(",",$this->ITEMGID);
        $SGLID=implode(",",$this->SGLID);

       



      return collect( $data=DB::select("SELECT 

      TBL_TRN_PRPB01_HDR.PB_DOCNO AS DOC_NO,
      TBL_TRN_PRPB01_HDR.PB_DOCDT AS DOC_DT,
      BG.BG_DESC AS BRANCH_GROUP,
      BR.BRNAME,
      VG.DESCRIPTIONS AS VENDOR_GROUP,
      V.VCODE AS VENDOR_CODE,
      V.NAME AS VENDOR_NAME,
      V.SAP_VENDOR_CODE,
      V.SAP_VENDOR_NAME1,
      TBL_TRN_PRPB01_HDR.VENDOR_INNO,
      TBL_TRN_PROR01_HDR.PO_NO,
      TBL_TRN_IGRN02_HDR.GRN_NO,
      TBL_MST_ITEMGROUP.GROUPNAME,
      TBL_MST_ITEM.NAME AS ITEM_NAME,
      HSN.HSNCODE,
      MU.UOMCODE,
      TBL_MST_BUSINESSUNIT.BUNAME,
      TBL_MST_ITEM.ALPS_PART_NO AS ALPS_PART_NO,
      TBL_MST_ITEM.CUSTOMER_PART_NO AS CUSTOMER_PART_NO,
      TBL_MST_ITEM.OEM_PART_NO AS OEM_PART_NO,
      TBL_TRN_PRPB01_MAT.PENDING_QTY AS PENDING_QTY,
      (TBL_TRN_PRPB01_MAT.BILL_QTY-TBL_TRN_PRPB01_MAT.PENDING_QTY) AS CONSUMED_QTY,
      TBL_TRN_PRPB01_MAT.BILL_QTY AS ITEM_QTY,
      TBL_TRN_PRPB01_MAT.RECEIVED_QTY,
      (TBL_TRN_PRPB01_MAT.BILL_QTY-TBL_TRN_PRPB01_MAT.RECEIVED_QTY) AS ShortQuantity,
      TBL_TRN_PRPB01_MAT.BILL_RATEPUOM AS RATEPUOM,
      (TBL_TRN_PRPB01_MAT.BILL_RATEPUOM-TBL_TRN_PRPB01_MAT.BILL_QTY) AS PurchaseAmountBeforeTax,

  ((((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT= '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100))
              else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.IGST)/100)) AS IGST,

      ((((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100))
      else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.CGST)/100)) AS CGST,

      ((((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100))
      else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.SGST)/100)) AS SGST,
                    
        ((((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.IGST)/100)+
        (((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.CGST)/100)+
        ((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.SGST)/100) AS TotalTax,
            
          CT.CT,
          TDS.TDS_AMT,
          TBL_TRN_PRPB01_MAT.BILL_RATEPUOM AS Rate,
          (TBL_TRN_PRPB01_MAT.BILL_RATEPUOM * TBL_TRN_PRPB01_MAT.BILL_QTY) AS GROSS_AMOUNT,
          
  ((((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.IGST)/100)+
        (((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.CGST)/100)+
        ((TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.BILL_QTY)-(case when TBL_TRN_PRPB01_MAT.DISC_AMT = '0.00' then convert(numeric(14,2),((TBL_TRN_PRPB01_MAT.BILL_QTY*TBL_TRN_PRPB01_MAT.BILL_RATEPUOM*TBL_TRN_PRPB01_MAT.DISCOUNT)/100)) else  TBL_TRN_PRPB01_MAT.DISC_AMT end))*(TBL_TRN_PRPB01_MAT.SGST)/100) AS NetAmount,
                    

          CASE
              WHEN TBL_TRN_PRPB01_HDR.STATUS ='A' THEN 'Approved'
              WHEN TBL_TRN_PRPB01_HDR.STATUS = 'N' THEN 'Not Approved'
              WHEN TBL_TRN_PRPB01_HDR.STATUS = 'c' THEN 'Cancelled'
              WHEN TBL_TRN_PRPB01_HDR.STATUS = 'R' THEN 'Closed'
          
          END AS STATUS

      FROM TBL_TRN_PRPB01_MAT (NOLOCK)
      LEFT OUTER JOIN TBL_TRN_PRPB01_HDR (NOLOCK) ON TBL_TRN_PRPB01_HDR.PBID = TBL_TRN_PRPB01_MAT.PBID_REF  

      LEFT OUTER JOIN  TBL_MST_SUBLEDGER (NOLOCK) ON TBL_TRN_PRPB01_HDR.VID_REF = TBL_MST_SUBLEDGER.SGLID 
      LEFT OUTER JOIN  TBL_MST_VENDOR AS V ON TBL_MST_SUBLEDGER.SGLID = V.SLID_REF 
      LEFT OUTER JOIN  TBL_MST_VENDORGROUP AS VG ON V.VGID_REF = VG.VGID 
      LEFT OUTER JOIN  TBL_MST_BRANCH AS BR WITH (NOLOCK) ON TBL_TRN_PRPB01_HDR.BRID_REF=BR.BRID 
      LEFT OUTER JOIN  TBL_MST_BRANCH_GROUP AS BG WITH (NOLOCK) ON BR.BGID_REF=BG.BGID 

      LEFT OUTER JOIN TBL_MST_STATE (NOLOCK) ON V.REGSTID_REF = TBL_MST_STATE.STID
      LEFT OUTER JOIN TBL_MST_ITEM (NOLOCK) ON TBL_TRN_PRPB01_MAT.ITEMID_REF = TBL_MST_ITEM.ITEMID 
      LEFT OUTER JOIN TBL_MST_HSN AS HSN WITH (NOLOCK) ON TBL_MST_ITEM.HSNID_REF=HSN.HSNID
      LEFT OUTER JOIN TBL_MST_ITEMGROUP (NOLOCK) ON TBL_MST_ITEM.ITEMGID_REF = TBL_MST_ITEMGROUP.ITEMGID  
      LEFT OUTER JOIN TBL_MST_BUSINESSUNIT (NOLOCK) ON TBL_MST_ITEM.BUID_REF = TBL_MST_BUSINESSUNIT.BUID
      LEFT OUTER JOIN TBL_MST_UOM (NOLOCK) AS MU ON TBL_TRN_PRPB01_MAT.UOMID_REF = MU.UOMID 
      LEFT OUTER JOIN TBL_MST_VENDORLOCATION (NOLOCK) AS CL ON TBL_TRN_PRPB01_HDR.BILL_TO = CL.LID 
      LEFT OUTER JOIN TBL_MST_VENDORLOCATION (NOLOCK) ON TBL_TRN_PRPB01_HDR.SHIP_TO = TBL_MST_VENDORLOCATION.LID 
      LEFT OUTER JOIN TBL_TRN_PROR01_HDR (NOLOCK) ON TBL_TRN_PRPB01_MAT.POID_REF = TBL_TRN_PROR01_HDR.POID
      LEFT OUTER JOIN TBL_TRN_IGRN02_HDR (NOLOCK) ON TBL_TRN_PRPB01_MAT.GRN_NO = TBL_TRN_IGRN02_HDR.GRNID  LEFT OUTER JOIN
      (SELECT K.PBID_REF,SUM(ISNULL(K.VALUE,0)+(ISNULL(K.VALUE,0)*ISNULL(K.CGST,0)/100)+
      (ISNULL(K.VALUE,0)*ISNULL(K.SGST,0)/100)+
      (ISNULL(K.VALUE,0)*ISNULL(K.IGST,0)/100)) AS CT FROM TBL_TRN_PRPB01_CAL K GROUP BY K.PBID_REF)  AS CT ON TBL_TRN_PRPB01_HDR.PBID=CT.PBID_REF
      LEFT OUTER JOIN(
      SELECT D.PBID_REF,SUM(CASE WHEN (ISNULL(D.ASSESSABLE_VL_TDS,0) > ISNULL(E.TDS_EXEMP_LIMIT,0)) THEN         
      CONVERT(NUMERIC(14,2),(((ISNULL(D.ASSESSABLE_VL_TDS,0)-ISNULL(E.TDS_EXEMP_LIMIT,0)) * ISNULL(D.TDS_RATE,0))/100)) ELSE 0 END +   
      CASE WHEN (ISNULL(D.ASSESSABLE_VL_SURCHAPGE,0) > ISNULL(E.SURCHARGE_EXEMP_LIMIT,0)) THEN           
      CONVERT(NUMERIC(14,2),(((ISNULL(D.ASSESSABLE_VL_SURCHAPGE,0)-ISNULL(E.SURCHARGE_EXEMP_LIMIT,0)) * ISNULL(D.SURCHAPGE_RATE,0))/100)) ELSE 0 END +   
      CASE WHEN (ISNULL(D.ASSESSABLE_VL_CESS,0) > ISNULL(E.CESS_EXEMP_LIMIT,0)) THEN          
      CONVERT(NUMERIC(14,2),(((ISNULL(D.ASSESSABLE_VL_CESS,0)-ISNULL(E.CESS_EXEMP_LIMIT,0)) * ISNULL(D.CESS_RATE,0))/100)) ELSE 0 END +  
      CASE WHEN (ISNULL(D.ASSESSABLE_VL_SPCESS,0) > ISNULL(E.SP_CESS_EXEMP_LIMIT,0)) THEN           
      CONVERT(NUMERIC(14,2),(((ISNULL(D.ASSESSABLE_VL_SPCESS,0)-ISNULL(E.SP_CESS_EXEMP_LIMIT,0)) * ISNULL(D.SPCESS_RATE,0))/100)) ELSE 0 END) AS TDS_AMT 
      FROM TBL_TRN_PRPB01_TDS D(NOLOCK)  INNER JOIN TBL_MST_WITHHOLDING E(NOLOCK) ON D.TDSID_REF = E.HOLDINGID 
      GROUP BY D.PBID_REF
          )  AS TDS ON TBL_TRN_PRPB01_MAT.PBID_REF = TDS.PBID_REF




      WHERE
      (TBL_TRN_PRPB01_HDR.STATUS = '$this->STATUS') AND 
      (TBL_TRN_PRPB01_HDR.CYID_REF = $this->CYID) AND 
      (TBL_TRN_PRPB01_HDR.BRID_REF in($BranchName)) AND 
      (TBL_TRN_PRPB01_HDR.PB_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date') AND 
      (TBL_TRN_PRPB01_HDR.VID_REF IN ($SGLID)) AND 
      (TBL_MST_ITEM.ITEMGID_REF	in ( $ITEMGID)) AND 
      (TBL_TRN_PRPB01_MAT.ITEMID_REF	in ( $ITEMID))"));

      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
       			
 return [
    'Purchase Bill No',
    'Purchase Bill Date',
    'Branch Group',
    'Branch Name',
    'Vendor Group',
    'Vendor Code',
    'Vendor Name',
    'SAP Vendor Code',
    'SAP Vendor Name',
    'Vendor Invoice No',
    'Purchase Order No',
    'GRN No',
    'Item Group',
    'Item Name',
    'HSN/SAC Code',
    'Uom',
    'Business Unit',
    'ALPS Part No',
    'Customer Part No',
    'OEM Part No',
    'Pending Qty',
    'Consumed Qty',
    'Actual Qty',
    'Received Quantity',
    'Short Quantity',
    'Bill Rate',
    'Purchase Amount Before Tax',
    'CGST',
    'SGST',
    'IGST',
    'Total Tax',
    'Calculation Amount',
    'TDS',
    'Rate',
    'Gross Amount',
    'Net Amount',
    'Status',			
    
];
    }
}





