<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\StockLedger;
use Maatwebsite\Excel\Facades\Excel;














class StockLedger implements FromCollection, WithHeadings
{


 function __construct($From_Date,$To_Date,$BranchGroup,$BranchName,$ITEMGID,$ITEMID,$CYID,$STOREID) {
        $this->ITEMID = $ITEMID;
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;
        $this->ITEMGID = $ITEMGID;
        $this->STOREID = $STOREID;

        $this->CYID = $CYID;
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

        //dd($this->From_Date); 
        
        $ITEMID=implode(",",$this->ITEMID);
        $BranchName=implode(",",$this->BranchName);      
        $ITEMGID=implode(",",$this->ITEMGID);
        $STOREID=implode(",",$this->STOREID);
       



      return collect( $data=DB::select("SELECT S2.STCODE+'-'+S2.NAME AS STORE,I.NAME,I.ICODE,I.ALPS_PART_NO,I.CUSTOMER_PART_NO, I.OEM_PART_NO,B.BUCODE+'-'+B.BUNAME AS BUSINESSUNIT,
S.ITEMID_REF,S.STID_REF,H.HSNCODE+'-'+H.HSNDESCRIPTION AS HSN,U.UOMCODE+'-'+U.DESCRIPTIONS AS UOM,
SUM(ISNULL(S.OPENING_QTY,0.000)) AS OPENING_QTY,SUM(ISNULL(S.IN_QTY,0.000)) AS IN_QTY,SUM(ISNULL(S.PURCHASE_QTY,0.000)) AS PURCHASE_QTY,
SUM(ISNULL(S.OUTWARD_QTY,0.000)) AS OUTWARD_QTY,SUM(ISNULL(S.SALE_QTY,0.000)) AS SALE_QTY,SUM(ISNULL(S.SCRAP_QTY,0.000)) AS SCRAP_QTY,
((SUM(ISNULL(S.OPENING_QTY,0.000))+SUM(ISNULL(S.IN_QTY,0.000))+SUM(ISNULL(S.PURCHASE_QTY,0.000))) -
(SUM(ISNULL(S.OUTWARD_QTY,0.000))+SUM(ISNULL(S.SALE_QTY,0.000))+SUM(ISNULL(S.SCRAP_QTY,0.000)))) AS CLOSING_QTY,
SUM(ISNULL(S.OPENING_BALANCE_AMOUNT,0.00)) AS OPENING_BALANCE_AMOUNT,SUM(ISNULL(S.PURCHASE_AMOUNT,0.00))  AS PURCHASE_AMOUNT,
SUM(ISNULL(S.CUSTOM_DUTY_AMOUNT,0.000)) AS CUSTOM_DUTY_AMOUNT,SUM(ISNULL(S.CLEANING_FORWARDING_AMOUNT,0.000)) AS CLEANING_FORWARDING_AMOUNT,
SUM(ISNULL(S.FREIGHT_TRANSPORTATION_IN_AMOUNT,0.000)) AS FREIGHT_TRANSPORTATION_IN_AMOUNT,SUM(ISNULL(S.PORT_CHARGES_AMOUNT,0.000)) AS PORT_CHARGES_AMOUNT,
SUM(ISNULL(S.OTHER_DUTY_AMOUNT,0.000)) AS OTHER_DUTY_AMOUNT,(SUM(ISNULL(S.OPENING_BALANCE_AMOUNT,0.00))+ SUM(ISNULL(S.PURCHASE_AMOUNT,0.00))+
SUM(ISNULL(S.CUSTOM_DUTY_AMOUNT,0.000))+SUM(ISNULL(S.CLEANING_FORWARDING_AMOUNT,0.000))+SUM(ISNULL(S.FREIGHT_TRANSPORTATION_IN_AMOUNT,0.000))
+SUM(ISNULL(S.PORT_CHARGES_AMOUNT,0.000))+ SUM(ISNULL(S.OTHER_DUTY_AMOUNT,0.000))) AS COST_VALUE,
(ISNULL((SUM(ISNULL(S.OPENING_BALANCE_AMOUNT,0.00))+
SUM(ISNULL(S.PURCHASE_AMOUNT,0.00))+SUM(ISNULL(S.CUSTOM_DUTY_AMOUNT,0.000))+SUM(ISNULL(S.CLEANING_FORWARDING_AMOUNT,0.000))+SUM(ISNULL(S.FREIGHT_TRANSPORTATION_IN_AMOUNT,0.000))
+SUM(ISNULL(S.PORT_CHARGES_AMOUNT,0.000))+ SUM(ISNULL(S.OTHER_DUTY_AMOUNT,0.000))),0)/
ISNULL((SUM(ISNULL(S.OPENING_QTY,0.000))+SUM(ISNULL(S.IN_QTY,0.000))+SUM(ISNULL(S.PURCHASE_QTY,0.000))),0)) AS COST_PER_UNIT,
ISNULL((SELECT TOP 1 RATEPUOM FROM TBL_TRN_SLSI01_MAT WHERE ITEMID_REF = S.ITEMID_REF ORDER BY SIID_REF DESC),0) AS SALES_PRICE
FROM(
SELECT
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,SUM(ISNULL(S.IN_QTY,0.000)) AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,SUM(ISNULL(S.SCRAP_QTY,0.000)) AS SCRAP_QTY,
0 AS OPENING_BALANCE_AMOUNT,0 AS PURCHASE_AMOUNT,
0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,
0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT,0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM(
SELECT  DISTINCT C.ITEMID_REF,C.STID_REF,
0 AS OPENING_QTY,
0 AS IN_QTY, 
0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,
0 AS SALE_QTY,
ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 464 AND D.STATUS <> 'C' AND D.RCID IN (SELECT ST_STID FROM TBL_TRN_STOCK_STOCK_HDR WHERE ST_ST_TYPE = 'SCRAP')
AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF AND D.BATCHID_REF = C.BATCHID_REF),0) AS SCRAP_QTY,
0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,
0 AS CUSTOM_DUTY_AMOUNT,
0 AS CLEANING_FORWARDING_AMOUNT,
0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT,
0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,
0 AS SALES_PRICE
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C  INNER JOIN TBL_MST_BATCH BT ON C.BATCHID_REF = BT.BATCHID AND C.ITEMID_REF = BT.ITEMID_REF
AND C.STID_REF = BT.STID_REF AND C.UOMID_REF = BT.UOMID_REF AND BT.STOCKID_REF = C.STOCKID_REF AND C.RCID = BT.DOC_ID
LEFT JOIN TBL_MST_BATCH_WEF W ON BT.BATCH_CODE = W.BATCH_CODE AND BT.ITEMID_REF = W.ITEMID_REF
AND BT.UOMID_REF = W.UOMID_REF AND BT.STID_REF = W.STID_REF AND BT.STOCKID_REF = W.STOCKID_REF
WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID   AND C.BRID_REF IN ($BranchName)
GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF,C.STOCKID_REF,BT.BATCH_CODE,W.BATCH_CODE,BT.BATCHID,C.RCID) AS S
GROUP BY S.ITEMID_REF,S.STID_REF,S.SALES_PRICE
UNION
SELECT DISTINCT D.ITEMID_REF,D.STID_REF,SUM(D.OPENING_QTY) AS OPENING_QTY,SUM(D.IN_QTY) AS IN_QTY,SUM(D.PURCHASE_QTY) PURCHASE_QTY,SUM(D.OUTWARD_QTY) AS OUTWARD_QTY,
SUM(D.SALE_QTY) AS SALE_QTY,0 AS SCRAP_QTY, SUM(OPENING_BALANCE_AMOUNT) AS OPENING_BALANCE_AMOUNT,SUM(D.PURCHASE_AMOUNT) PURCHASE_AMOUNT,
SUM(D.CUSTOM_DUTY_AMOUNT) AS CUSTOM_DUTY_AMOUNT,SUM(D.CLEANING_FORWARDING_AMOUNT) AS CLEANING_FORWARDING_AMOUNT,
SUM(D.FREIGHT_TRANSPORTATION_IN_AMOUNT) AS FREIGHT_TRANSPORTATION_IN_AMOUNT, SUM(D.PORT_CHARGES_AMOUNT) AS PORT_CHARGES_AMOUNT,
SUM(D.OTHER_DUTY_AMOUNT) AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE FROM (
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,0 AS OPENING_QTY,0 AS IN_QTY,SUM(PURCHASE_QTY) AS PURCHASE_QTY,0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT  DISTINCT 
C.ITEMID_REF,C.STID_REF,
ISNULL((SELECT SUM(PPQTY) FROM (SELECT   D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,D.STOCKID,94 AS VTID,SUM(PPQTY) AS PPQTY FROM
(SELECT   D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,SUM(ISNULL(D.RECEIVED_QTYM,0.000)) AS PPQTY,S.STOCKID
FROM TBL_TRN_IGRN02_MULTISTORE D (NOLOCK) INNER JOIN TBL_MST_STOCK S ON D.ITEMID_REF = S.ITEMID_REF AND D.MAIN_UOMID_REF = S.UOMID_REF
AND D.STID_REF = S.STID_REF WHERE D.GRNID_REF IN (SELECT GRNID FROM TBL_TRN_IGRN02_HDR WHERE STATUS= 'A' AND  GRN_DT BETWEEN '$this->From_Date' AND '$this->To_Date')
GROUP BY  D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,S.STOCKID ) AS D GROUP BY  D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,D.STOCKID) AS D
WHERE  D.ITEMID_REF = C.ITEMID_REF AND D.MAIN_UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF  AND D.STOCKID = C.STOCKID_REF ),0) AS PURCHASE_QTY
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID AND C.BRID_REF IN ($BranchName) AND C.STATUS <> 'C'
 GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF,C.STOCKID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF
having SUM(ISNULL(S.PURCHASE_QTY,0.000)) > 0.000
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,0 AS OPENING_QTY,SUM(IN_QTY) AS IN_QTY,0 AS PURCHASE_QTY,0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
select C.ITEMID_REF,C.STID_REF,
(ISNULL((select SUM(ISNULL(D.IN_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.IN_QTY > '0.000' AND D.VTID = 398 AND D.STATUS <> 'C' AND ITEMID_REF = C.ITEMID_REF AND UOMID_REF = C.UOMID_REF AND STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)+
ISNULL((select SUM(ISNULL(D.IN_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.IN_QTY > '0.000' AND D.VTID = 464 AND D.STATUS <> 'C' AND ITEMID_REF = C.ITEMID_REF AND UOMID_REF = C.UOMID_REF AND STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)
+ISNULL((select SUM(ISNULL(D.IN_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.IN_QTY > '0.000' AND D.VTID = 324 AND D.STATUS <> 'C' AND D.RCID IN (SELECT ST_ADJUSTID FROM TBL_TRN_STOCK_ADJUST_HDR WHERE ST_ADJUST_TYPE = 'IN')
 AND ITEMID_REF = C.ITEMID_REF AND UOMID_REF = C.UOMID_REF AND STID_REF = C.STID_REF AND D.BATCHID_REF = C.BATCHID_REF),0)
+ISNULL((select SUM(ISNULL(D.IN_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.IN_QTY > '0.000' AND D.VTID = 443 AND D.STATUS <> 'C' AND ITEMID_REF = C.ITEMID_REF AND UOMID_REF = C.UOMID_REF AND STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)) AS IN_QTY
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID   AND C.BRID_REF IN ($BranchName)  
AND C.IN_QTY > '0.000'  GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF having SUM(ISNULL(S.IN_QTY,0.000)) > 0.000
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,SUM(OUTWARD_QTY) AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
select C.ITEMID_REF,C.STID_REF,
(ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) INNER JOIN TBL_TRN_MISS01_MULTISTORE E ON D.BATCHID_REF = E.BATCH_CODE 
AND D.ITEMID_REF = E.ITEMID_REF AND D.UOMID_REF = E.MAIN_UOMID_REF AND D.STID_REF = E.STID_REF WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 398 AND D.STATUS <> 'C' AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)+
ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) INNER JOIN TBL_TRN_PDMISR_STORE E ON D.BATCHID_REF = E.BATCHID_REF 
AND D.ITEMID_REF = E.ITEMID_REF AND D.UOMID_REF = E.UOMID_REF AND D.STID_REF = E.STID_REF WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 395 AND D.STATUS <> 'C' AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)+
ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) INNER JOIN TBL_TRN_MISP01_MULTISTORE E ON D.BATCHID_REF = E.BATCH_CODE 
AND D.ITEMID_REF = E.ITEMID_REF AND D.UOMID_REF = E.MAIN_UOMID_REF AND D.STID_REF = E.STID_REF WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 395 AND D.STATUS <> 'C' AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)+
ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 464 AND D.STATUS <> 'C' AND D.RCID IN (SELECT ST_STID FROM TBL_TRN_STOCK_STOCK_HDR WHERE ST_ST_TYPE = 'TRANSFER')
 AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF AND D.BATCHID_REF = C.BATCHID_REF),0)
+ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 324 AND D.STATUS <> 'C' AND D.RCID IN (SELECT ST_ADJUSTID FROM TBL_TRN_STOCK_ADJUST_HDR WHERE ST_ADJUST_TYPE = 'OUT')
 AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF AND D.BATCHID_REF = C.BATCHID_REF),0)
+ISNULL((select SUM(ISNULL(D.OUT_QTY,0.000)) FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) INNER JOIN TBL_TRN_JWC_STORE E ON D.BATCHID_REF = E.BATCHID_REF 
AND D.ITEMID_REF = E.ITEMID_REF AND D.UOMID_REF = E.UOMID_REF AND D.STID_REF = E.STID_REF WHERE D.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' 
AND D.CYID_REF = $this->CYID AND D.BRID_REF IN ($BranchName)
AND D.OUT_QTY > '0.000' AND D.VTID = 395 AND D.STATUS <> 'C' AND D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF
AND D.BATCHID_REF = C.BATCHID_REF),0)) AS OUTWARD_QTY
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID   AND C.BRID_REF IN ($BranchName) 
AND C.OUT_QTY > '0.000'  GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF having SUM(ISNULL(S.OUTWARD_QTY,0.000)) > 0.000
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
SUM(PURCHASE_AMOUNT) AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT  DISTINCT 
C.ITEMID_REF,C.STID_REF,
ISNULL((SELECT SUM(PPQTY) FROM (SELECT   D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,D.STOCKID,94 AS VTID,SUM(PPQTY) AS PPQTY FROM
(SELECT   D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,SUM(ISNULL(D.RECEIVED_QTYM,0.000)*ISNULL(D.RATE,0.00000)) AS PPQTY,S.STOCKID
FROM TBL_TRN_IGRN02_MULTISTORE D (NOLOCK) INNER JOIN TBL_MST_STOCK S ON D.ITEMID_REF = S.ITEMID_REF AND D.MAIN_UOMID_REF = S.UOMID_REF
AND D.STID_REF = S.STID_REF WHERE D.GRNID_REF IN (SELECT GRNID FROM TBL_TRN_IGRN02_HDR WHERE STATUS= 'A' AND  GRN_DT BETWEEN '$this->From_Date' AND '$this->To_Date')
GROUP BY  D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,S.STOCKID ) AS D GROUP BY  D.ITEMID_REF,D.MAIN_UOMID_REF,D.STID_REF,D.GRNID_REF,D.STOCKID) AS D
WHERE  D.ITEMID_REF = C.ITEMID_REF AND D.MAIN_UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF  AND D.STOCKID = C.STOCKID_REF ),0) AS PURCHASE_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID AND C.BRID_REF IN ($BranchName) AND C.STATUS <> 'C'
 GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF,C.STOCKID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF
having SUM(ISNULL(S.PURCHASE_AMOUNT,0.00)) > 0.00
UNION
SELECT  DISTINCT 
D.ITEMID_REF,D.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,SUM(D.SALE_QTY) AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT   D.ITEMID_REF,D.STID_REF,SUM(ISNULL(D.DISPATCH_MAIN_QTY,0.000)) AS SALE_QTY
FROM TBL_TRN_SLSC01_STORE D (NOLOCK)  WHERE D.SCID_REF IN (SELECT SCID FROM TBL_TRN_SLSC01_HDR WHERE STATUS= 'A' AND  SCDT BETWEEN '$this->From_Date' AND '$this->To_Date') 
GROUP BY  D.ITEMID_REF,D.STID_REF) AS D
GROUP BY D.ITEMID_REF,D.STID_REF
having SUM(D.SALE_QTY) > 0.00
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
SUM(OPENING_QTY) AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0 AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT  DISTINCT 
C.ITEMID_REF,C.STID_REF,
ISNULL((SELECT SUM(PPQTY) FROM (SELECT   D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.BATCHID_REF,70 AS VTID,SUM(PPQTY) AS PPQTY FROM
(SELECT   D.ITEMID_REF,D.UOMID_REF,D.STID_REF,SUM(ISNULL(D.OPENING_QTY,0.000)) AS PPQTY,D.BATCHID_REF
FROM TBL_MST_STOCK_BATCH_HIS D (NOLOCK) WHERE D.OPENING_QTY > '0.000'
GROUP BY  D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.BATCHID_REF ) AS D GROUP BY  D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.BATCHID_REF) AS D
WHERE  D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF  AND D.BATCHID_REF = C.BATCHID_REF ),0) AS OPENING_QTY
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID AND C.BRID_REF IN ($BranchName) AND C.STATUS <> 'C'
 GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF,C.STOCKID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF
having SUM(ISNULL(S.OPENING_QTY,0.00)) > 0.00
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,SUM(OPENING_BALANCE_AMOUNT)  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 0 AS PORT_CHARGES_AMOUNT,
0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT  DISTINCT 
C.ITEMID_REF,C.STID_REF,
ISNULL((SELECT SUM(PPQTY) FROM (SELECT   D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.IOBID_REF,D.STOCKID,70 AS VTID,SUM(PPQTY) AS PPQTY FROM
(SELECT   D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.IOBID_REF,SUM(ISNULL(D.OPENING_BL,0.000)*ISNULL(D.RATE,0.00000)) AS PPQTY,S.STOCKID
FROM TBL_MST_ITEM_OB_MAT D (NOLOCK) INNER JOIN TBL_MST_STOCK S ON D.ITEMID_REF = S.ITEMID_REF AND D.UOMID_REF = S.UOMID_REF
AND D.STID_REF = S.STID_REF WHERE D.IOBID_REF IN (SELECT IOBID FROM TBL_MST_ITEM_OB_HDR WHERE STATUS= 'A' AND  OPENING_BL_DT BETWEEN '$this->From_Date' AND '$this->To_Date')
GROUP BY  D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.IOBID_REF,S.STOCKID ) AS D GROUP BY  D.ITEMID_REF,D.UOMID_REF,D.STID_REF,D.IOBID_REF,D.STOCKID) AS D
WHERE  D.ITEMID_REF = C.ITEMID_REF AND D.UOMID_REF = C.UOMID_REF AND D.STID_REF = C.STID_REF  AND D.STOCKID = C.STOCKID_REF ),0) AS OPENING_BALANCE_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS (NOLOCK) C WHERE C.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND C.CYID_REF = $this->CYID AND C.BRID_REF IN ($BranchName) 
AND C.STATUS <> 'C' AND C.VTID = 70
 GROUP BY C.ITEMID_REF,C.STID_REF,C.UOMID_REF,C.BATCHID_REF,C.STOCKID_REF) AS S
 INNER JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID INNER JOIN TBL_MST_STORE E ON S.STID_REF = E.STID
GROUP BY S.ITEMID_REF,S.STID_REF
having SUM(ISNULL(S.OPENING_BALANCE_AMOUNT,0.00)) > 0.00
UNION
SELECT  DISTINCT S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,SUM(S.CUSTOM_DUTY_AMOUNT) AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM((A.IN_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS CUSTOM_DUTY_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF 
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'CUSTOM DUTY' and (A.IN_QTY > '0.000')
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.CUSTOM_DUTY_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,SUM(S.CLEANING_FORWARDING_AMOUNT) AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.IN_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS CLEANING_FORWARDING_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Clearing & Forwarding Charges' and (A.IN_QTY > '0.000')
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.CLEANING_FORWARDING_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,SUM(S.CLEANING_FORWARDING_AMOUNT) AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.OPENING_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS CLEANING_FORWARDING_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Clearing & Forwarding Charges' and (A.OPENING_QTY > '0.000')
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.CLEANING_FORWARDING_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,SUM(S.FREIGHT_TRANSPORTATION_IN_AMOUNT) AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.IN_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS FREIGHT_TRANSPORTATION_IN_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Freight / Transportation In' and (A.IN_QTY > '0.000')
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.FREIGHT_TRANSPORTATION_IN_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,SUM(S.FREIGHT_TRANSPORTATION_IN_AMOUNT) AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.OPENING_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS FREIGHT_TRANSPORTATION_IN_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Freight / Transportation In' and (A.OPENING_QTY > '0.000')
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.FREIGHT_TRANSPORTATION_IN_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
SUM(S.PORT_CHARGES_AMOUNT) AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.IN_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS PORT_CHARGES_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName) 
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Port Charges' and (A.IN_QTY > '0.000') AND A.VTID = 94
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.PORT_CHARGES_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
SUM(S.PORT_CHARGES_AMOUNT) AS PORT_CHARGES_AMOUNT,0 AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.OPENING_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS PORT_CHARGES_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName) 
AND A.STATUS <> 'C' AND C.DESCRIPTIONS = 'Port Charges' and (A.OPENING_QTY > '0.000') AND A.VTID = 70
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.PORT_CHARGES_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,sum(s.OTHER_DUTY_AMOUNT) AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.IN_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS OTHER_DUTY_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName) 
AND A.STATUS <> 'C' and C.DESCRIPTIONS NOT IN ('Port Charges','Freight / Transportation In','Clearing & Forwarding Charges','CUSTOM DUTY','PURCHASE','NULL')
and (A.IN_QTY > '0.000') AND A.VTID = 94
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.OTHER_DUTY_AMOUNT) >= '0.00'
UNION
SELECT  DISTINCT 
S.ITEMID_REF,S.STID_REF,
0 AS OPENING_QTY,0 AS IN_QTY,0 AS PURCHASE_QTY,
0 AS OUTWARD_QTY,0 AS SALE_QTY,0 AS SCRAP_QTY,0  AS OPENING_BALANCE_AMOUNT,
0 AS PURCHASE_AMOUNT,0 AS CUSTOM_DUTY_AMOUNT,0 AS CLEANING_FORWARDING_AMOUNT,0 AS FREIGHT_TRANSPORTATION_IN_AMOUNT, 
0 AS PORT_CHARGES_AMOUNT,sum(s.OTHER_DUTY_AMOUNT) AS OTHER_DUTY_AMOUNT,0 AS SALES_PRICE
FROM (
SELECT A.ITEMID_REF,A.STID_REF,CAST(SUM(( A.OPENING_QTY)*(C.HEAD_RATE)) AS NUMERIC(14,2)) AS OTHER_DUTY_AMOUNT
FROM TBL_MST_STOCK_BATCH_HIS A INNER JOIN TBL_MST_BATCH B ON A.BATCHID_REF = B.BATCHID AND A.ITEMID_REF = B.ITEMID_REF
AND A.UOMID_REF = B.UOMID_REF AND A.STID_REF = B.STID_REF  AND A.STOCKID_REF = B.STOCKID_REF AND A.RCID = B.DOC_ID
INNER JOIN TBL_MST_BATCH_WEF C ON  C.BATCH_CODE = B.BATCH_CODE AND C.DOC_ID = B.DOC_ID
AND C.ITEMID_REF = B.ITEMID_REF AND C.UOMID_REF = B.UOMID_REF AND C.STID_REF = B.STID_REF AND C.STOCKID_REF = B.STOCKID_REF and B.IN_QTY = C.IN_QTY
WHERE A.DATE BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName) 
AND A.STATUS <> 'C' and C.DESCRIPTIONS NOT IN ('Port Charges','Freight / Transportation In','Clearing & Forwarding Charges','CUSTOM DUTY','PURCHASE','NULL')
and (A.OPENING_QTY > '0.000') AND A.VTID = 70
GROUP BY A.ITEMID_REF,A.STID_REF
) AS S GROUP BY S.ITEMID_REF,S.STID_REF
HAVING SUM(S.OTHER_DUTY_AMOUNT) >= '0.00'
) AS D GROUP BY D.ITEMID_REF,D.STID_REF
) AS S 
LEFT JOIN TBL_MST_ITEM I ON S.ITEMID_REF = I.ITEMID LEFT JOIN TBL_MST_BUSINESSUNIT B ON I.BUID_REF = B.BUID
LEFT JOIN TBL_MST_HSN H ON I.HSNID_REF = H.HSNID LEFT JOIN TBL_MST_STORE S2 ON S.STID_REF = S2.STID AND (S2.DEACTIVATED IS NULL OR S2.DEACTIVATED = 0)
LEFT JOIN TBL_MST_UOM U ON I.MAIN_UOMID_REF = U.UOMID AND (U.DEACTIVATED IS NULL OR U.DEACTIVATED = 0)
WHERE S.ITEMID_REF IN ($ITEMID) AND I.ITEMGID_REF IN ($ITEMGID) AND S.STID_REF IN ($STOREID)   
GROUP BY S.ITEMID_REF,S.STID_REF,S2.STCODE,S2.NAME,I.NAME,I.ICODE,I.ALPS_PART_NO,I.CUSTOMER_PART_NO, I.OEM_PART_NO,B.BUCODE,B.BUNAME,
H.HSNCODE,H.HSNDESCRIPTION,U.UOMCODE,U.DESCRIPTIONS
HAVING (SUM(ISNULL(S.OPENING_QTY,0.000))+SUM(ISNULL(S.IN_QTY,0.000))+SUM(ISNULL(S.PURCHASE_QTY,0.000)))> '0.000'"));



      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
        return [
          'Branch Group',
          'Branch Name',
          'Store Name',
          'Item Group',
          'Item Code',
          'Item Name',
           'UOM',
           'Business Unit',
           'Alps Part No',
           'Customer Part No',
           'OEM Part No',
           'Opening Qty',
		   'Opening Rate',
		   'Opening Amount',		   
          'IN Qty',
		  'IN Rate',
		  'IN Amount',
          'Out Qty',
		  'Out Rate',
		  'Out Amount',
          'Closing Qty',
		  'Closing Rate',
		  'Closing Amount'
          ];
    }
}





