<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\TDS_SectionWise;
use Maatwebsite\Excel\Facades\Excel;














class TDS_SectionWise implements FromCollection, WithHeadings
{


 function __construct($SECTIONID,$From_Date,$To_Date,$BranchName,$CYID_REF) {
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;
        $this->CYID = $CYID_REF;
        $this->SECTIONID = $SECTIONID;


 
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

      //dd($this->CYID); 
        //dd($this->From_Date); 
             
        $BranchName=implode(",",$this->BranchName);          
        $SECTIONID=implode(",",$this->SECTIONID);
    

      // dd($GLID);
		//dd($AGID);



      return collect( $data=DB::select("SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_PRPB02_TDS A INNER JOIN TBL_TRN_PRPB02_HDR B ON A.SPIID_REF = B.SPIID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID  AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.SPI_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_PRPB01_TDS A INNER JOIN TBL_TRN_PRPB01_HDR B ON A.PBID_REF = B.PBID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.PB_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID)
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_PII_TDS A INNER JOIN TBL_TRN_PII_HDR B ON A.PII_ID_REF = B.PII_ID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.PII_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CASE WHEN B.AP_TYPE= 'Debit Note' THEN -CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) ELSE CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) END AS TDS_AMOUNT
      FROM TBL_TRN_FNAPDRCR_TDS A INNER JOIN TBL_TRN_FNAPDRCR_HDR B ON A.APDRCRID_REF = B.APDRCRID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.AP_DOC_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME,B.AP_TYPE
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_PAYMENT_TDS A INNER JOIN TBL_TRN_PAYMENT_HDR B ON A.PAYMENTID_REF = B.PAYMENTID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A' AND B.PAYMENT_FOR = 'VENDOR'
      AND B.PAYMENT_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_SLSI01_TDS A INNER JOIN TBL_TRN_SLSI01_HDR B ON A.SIID_REF = B.SIID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.SIDT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_SLSI02_TDS A INNER JOIN TBL_TRN_SLSI02_HDR B ON A.SSIID_REF = B.SSIID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.SSI_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
      FROM TBL_TRN_RECEIPT_TDS A INNER JOIN TBL_TRN_RECEIPT_HDR B ON A.RECEIPTID_REF = B.RECEIPTID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A' AND B.RECEIPT_FOR = 'CUSTOMER'
      AND B.RECEIPT_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME
      UNION
      SELECT C.CODE_DESC AS NATUREOFPAYMENT, D.SECTION_CODE,D.SECTION_NAME, E.NOA_NAME AS Assessee_Type,
      CASE WHEN B.AR_TYPE = 'Credit Note' THEN -CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) ELSE CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) END AS TDS_AMOUNT
      FROM TBL_TRN_FNARDRCR_TDS A INNER JOIN TBL_TRN_FNARDRCR_HDR B ON A.ARDRCRID_REF = B.ARDRCRID
      INNER JOIN TBL_MST_WITHHOLDING C ON A.TDSID_REF = C.HOLDINGID
      INNER JOIN TBL_MST_SECTION D ON C.SECTIONID_REF = D.SECTIONID
      INNER JOIN TBL_MST_NATUAREOF_ASSESSEE E ON C.ASSESSEEID_REF = E.NOAID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
      WHERE B.CYID_REF = $this->CYID AND  B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
      AND B.AR_DOC_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND D.SECTIONID IN ($SECTIONID) 
      GROUP BY C.CODE_DESC,D.SECTION_CODE,D.SECTION_NAME,E.NOA_NAME, B.AR_TYPE
      "));

      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
    

        return [
          'Nature of Payment',
          'Section Code',
          'Section Name',
          'Assessee Type',
          'TDS Amount',           
         ];
         
         
   
    }
}





