<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\GSTR2;
use Maatwebsite\Excel\Facades\Excel;














class GSTR2 implements FromCollection, WithHeadings
{


 function __construct($SGLID,$From_Date,$To_Date,$BranchName,$CYID) {
        $this->SGLID = $SGLID;
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;    
        $this->CYID = $CYID;
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

        //dd($this->From_Date); 
        

        $SGLID=implode(",",$this->SGLID);
        $BranchName=implode(",",$this->BranchName);      

       



      return collect( $data=DB::select("SELECT  
      A.PB_DOCDT as Invoice_Date, 
      A.PB_DOCNO as Invoice_No,
      C.VCODE as VendorCode,
      C.NAME as VendorName,
      C.GSTIN as GST,
       F.NAME AS SUPPLIERSTATE, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
      B.RECEIVED_QTY as QTY,
      I.UOMCODE AS UOM,
      B.BILL_RATEPUOM AS RATE,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN B.DISC_AMT ELSE
      (((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100) END AS NUMERIC(14,2)) AS DISCOUNTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT) ELSE
      ((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100)) END AS NUMERIC(14,2)) AS TAXABLEAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.CGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.CGST)/100) END AS NUMERIC(14,2)) AS CGSTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.SGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.SGST)/100) END AS NUMERIC(14,2)) AS SGSTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.IGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      
      
      (
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT) ELSE
      ((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100)) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.CGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.CGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.SGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.SGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-B.DISC_AMT)*B.IGST)/100) ELSE
      ((((B.RECEIVED_QTY*B.BILL_RATEPUOM)-(((B.RECEIVED_QTY*B.BILL_RATEPUOM)*B.DISCOUNT)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      ) AS TOTAL_AMOUNT,
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.IGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      CASE WHEN A.REVERSE_GST = 1 THEN 'YES' ELSE 'NO' END AS REVERSEGST,
      CASE WHEN A.GST_INPUT = 1 THEN 'YES' ELSE 'NO' END AS ITC_CLAIM,
      J.LADD AS BILL_ADDRESS,L.NAME AS BILL_CITY, --K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_PRPB01_HDR A(NOLOCK) INNER JOIN TBL_TRN_PRPB01_MAT B(NOLOCK) ON A.PBID = B.PBID_REF
      INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON A.VID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_BRANCH E(NOLOCK) ON A.BRID_REF = E.BRID 
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.UOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_VENDORLOCATION J(NOLOCK) ON A.BILL_TO = J.LID AND C.VID = J.VID_REF
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON J.CITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID  AND A.BRID_REF IN ($BranchName)
      AND A.VID_REF IN ($SGLID) AND A.PB_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      union
      SELECT  
      A.SPI_DT as Invoice_Date, 
      A.SPI_NO as Invoice_No,
      C.VCODE as VendorCode,
      C.NAME as VendorName,
      C.GSTIN as GST,
      F.NAME AS SUPPLIERSTATE, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
      B.BILL_QTY as QTY,
      I.UOMCODE AS UOM,
      B.BILL_RATEPUOM AS RATE,
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN B.DISCOUNT ELSE
      (((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100) END AS NUMERIC(14,2)) AS DISCOUNTAMT,
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT) ELSE
      ((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100)) END AS NUMERIC(14,2)) AS TAXABLEAMT,
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.CGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2)) AS CGSTAMT,
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.SGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2)) AS SGSTAMT,
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.IGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      
      
      (
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT) ELSE
      ((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100)) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.CGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.SGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT > '.00' THEN ((((B.BILL_QTY*B.BILL_RATEPUOM)-B.DISCOUNT)*B.IGST)/100) ELSE
      ((((B.BILL_QTY*B.BILL_RATEPUOM)-(((B.BILL_QTY*B.BILL_RATEPUOM)*B.DIS_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      
      
      
      
      ) AS TOTAL_AMOUNT,
      
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.IGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      CASE WHEN A.REVERSE_GST = 1 THEN 'YES' ELSE 'NO' END AS REVERSEGST,
      CASE WHEN A.GST_INPUT = 1 THEN 'YES' ELSE 'NO' END AS ITC_CLAIM,
      C.REGADDL1+' '+C.REGADDL2 AS BILL_ADDRESS,L.NAME AS BILL_CITY, --K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_PRPB02_HDR A(NOLOCK) INNER JOIN TBL_TRN_PRPB02_SRV B(NOLOCK) ON A.SPIID = B.SPIID_REF
      INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON A.VID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_BRANCH E(NOLOCK) ON A.BRID_REF = E.BRID 
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.SRVID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.UOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON C.REGCITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID  AND A.BRID_REF IN ($BranchName)
      AND A.VID_REF IN ($SGLID) AND A.SPI_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      union
      SELECT  
      A.PII_DT as Invoice_Date,
      
       A.PII_NO as Invoice_No,
       
      C.VCODE as VendorCode,
      C.NAME as VendorName,
      C.GSTIN as GST, 
      F.NAME AS SUPPLIERSTATE, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
      B.BILL_QTY as QTY,
      I.UOMCODE AS UOM,
      B.RATE_ASP_MU AS RATE,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN B.DISC_AMT ELSE
      (((B.BILL_QTY*B.RATE_ASP_MU)*B.DISC_PER)/100) END AS NUMERIC(14,2)) AS DISCOUNTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((B.BILL_QTY*B.RATE_ASP_MU)-B.DISC_AMT) ELSE
      ((B.BILL_QTY*B.RATE_ASP_MU)-(((B.BILL_QTY*B.RATE_ASP_MU)*B.DISC_PER)/100)) END AS NUMERIC(14,2)) AS TAXABLEAMT,
      '0.00' AS CGSTAMT,
      '0.00' AS SGSTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.BILL_QTY*B.RATE_ASP_MU)-B.DISC_AMT)*B.IGST)/100) ELSE
      ((((B.BILL_QTY*B.RATE_ASP_MU)-(((B.BILL_QTY*B.RATE_ASP_MU)*B.DISC_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      
      
      (
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((B.BILL_QTY*B.RATE_ASP_MU)-B.DISC_AMT) ELSE
      ((B.BILL_QTY*B.RATE_ASP_MU)-(((B.BILL_QTY*B.RATE_ASP_MU)*B.DISC_PER)/100)) END AS NUMERIC(14,2))
      
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN ((((B.BILL_QTY*B.RATE_ASP_MU)-B.DISC_AMT)*B.IGST)/100) ELSE
      ((((B.BILL_QTY*B.RATE_ASP_MU)-(((B.BILL_QTY*B.RATE_ASP_MU)*B.DISC_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      
      ) AS TOTAL_AMOUNT,
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      CASE WHEN A.REVERSE_GST = 1 THEN 'YES' ELSE 'NO' END AS REVERSEGST,
      CASE WHEN A.GST_INPUT_NOT_AVAIL = 1 THEN 'YES' ELSE 'NO' END AS ITC_CLAIM,
      C.REGADDL1+' '+C.REGADDL2 AS BILL_ADDRESS,L.NAME AS BILL_CITY, --K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_PII_HDR A(NOLOCK) INNER JOIN TBL_TRN_PII_MAT B(NOLOCK) ON A.PII_ID = B.PII_ID_REF
      INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON A.VID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_BRANCH E(NOLOCK) ON A.BRID_REF = E.BRID 
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.MAIN_UOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON C.REGCITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID  AND A.BRID_REF IN ($BranchName)
      AND A.VID_REF IN ($SGLID) AND A.PII_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      union
      SELECT  
      A.PRR_DT as Invoice_Date,
       A.PRR_NO as Invoice_No,
      C.VCODE as VendorCode,
      C.NAME as VendorName,
      C.GSTIN as GST, 
      F.NAME AS SUPPLIERSTATE, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME, H.HSNCODE AS HSN_SAC_CODE,
      B.RETURN_QTY_MU as QTY,
       I.UOMCODE AS UOM,
       B.RATEPUOM_MU AS RATE,
      0.00 AS DISCOUNTAMT,
      CAST((B.RETURN_QTY_MU*B.RATEPUOM_MU) AS NUMERIC(14,2)) AS TAXABLEAMT,
      CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.CGST_RATE)/100)  AS NUMERIC(14,2)) AS CGSTAMT,
      CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.SGST_RATE)/100)  AS NUMERIC(14,2))  AS SGSTAMT,
      CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.IGST_RATE)/100)  AS NUMERIC(14,2))  AS IGSTAMT,
      
      (
      CAST((B.RETURN_QTY_MU*B.RATEPUOM_MU) AS NUMERIC(14,2))
      +
      CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.CGST_RATE)/100)  AS NUMERIC(14,2))
      +
      CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.SGST_RATE)/100)  AS NUMERIC(14,2)) 
      +CAST((((B.RETURN_QTY_MU*B.RATEPUOM_MU)*B.IGST_RATE)/100)  AS NUMERIC(14,2)) 
      
      
      ) AS TOTAL_AMOUNT,
      
      
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST_RATE = '.00' AND B.SGST_RATE = '.00' AND B.IGST_RATE = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      'NO' AS REVERSEGST,
      'NO' AS ITC_CLAIM,
      C.REGADDL1+' '+C.REGADDL2 AS BILL_ADDRESS,L.NAME AS BILL_CITY, --K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_PRRT01_HDR A(NOLOCK) INNER JOIN TBL_TRN_PRRT01_MAT B(NOLOCK) ON A.PRRID = B.PRRID_REF
      INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON A.VID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_BRANCH E(NOLOCK) ON A.BRID_REF = E.BRID 
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.MAIN_UOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON C.REGCITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
      AND A.VID_REF IN ($SGLID) AND A.PRR_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      union
      SELECT  
      A.AP_DOC_DT as Invoice_Date,
       A.AP_DOC_NO as Invoice_No,
      C.VCODE as VendorCode,
      C.NAME as VendorName,
      C.GSTIN as GST,
       F.NAME AS SUPPLIERSTATE, 
      'S' AS ITEM_TYPE,
      J.GLNAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
       1.000 as QTY,
      'NOS' AS UOM,
      B.AMT AS RATE,
      CASE WHEN B.DISC_AMT > '.00' THEN B.DISC_AMT ELSE CAST(((B.AMT*DISC_PER)/100) AS NUMERIC(14,2)) END AS DISCOUNTAMT,
      CASE WHEN B.DISC_AMT > '.00' THEN CAST((B.AMT - B.DISC_AMT) AS NUMERIC(14,2)) ELSE
      CAST((B.AMT - ((B.AMT*DISC_PER)/100)) AS NUMERIC(14,2)) END AS TAXABLEAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.CGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2)) AS CGSTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.SGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2)) AS SGSTAMT,
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.IGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      (
      CASE WHEN B.DISC_AMT > '.00' THEN CAST((B.AMT - B.DISC_AMT) AS NUMERIC(14,2)) ELSE
      CAST((B.AMT - ((B.AMT*DISC_PER)/100)) AS NUMERIC(14,2)) END
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.CGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.SGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISC_AMT > '.00' THEN (((B.AMT - B.DISC_AMT)*B.IGST)/100) ELSE
      (((B.AMT - ((B.AMT*DISC_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      
      
      ) AS TOTAL_AMOUNT,
      
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.SGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      'NO' AS REVERSEGST,
      'NO' AS ITC_CLAIM,
      C.REGADDL1+' '+C.REGADDL2 AS BILL_ADDRESS,L.NAME AS BILL_CITY, --K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_FNAPDRCR_HDR A(NOLOCK) INNER JOIN TBL_TRN_FNAPDRCR_DET B(NOLOCK) ON A.APDRCRID = B.APDRCRID_REF
      LEFT JOIN TBL_MST_GENERALLEDGER J(NOLOCK) ON B.GLID_REF = J.GLID AND A.CYID_REF = J.CYID_REF
      INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON A.SLID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_BRANCH E(NOLOCK) ON A.BRID_REF = E.BRID 
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON B.HSNID_REF = H.HSNID AND A.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON C.REGCITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
      AND A.SLID_REF IN ($SGLID) AND A.AP_DOC_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND B.HSNID_REF IS NOT NULL AND A.STATUS = 'A'"));
      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
        
        return [
          'Invoice Date',
          'Invoice No',
          'Vendor Code',
          'Vendor Name',
          'Vendor GSTIN',
          'State place of supply',
          'Is the item a GOOD (G) or SERVICE (S)',
          'Item Description',
          'HSN OR SAC Code',  
          'Item Quantity',
          'Item Unit of Measurement',
          'Item Rate',
          'Total Item Discount Amount',
          'Item Taxable Value',
          'CGST Rate',
          'CGST Amount',
          'SGST Rate',
          'SGST Amount',
          'IGST Rate',
          'IGST Amount',
          'Total Invoice Amount',
          'Is this a bill of supply?',
          'Is this a Nil Rated/Exempt/NonGST Item?',
          'Is Reverse Charge Applicable?',
          'Vendor Billing Address',
          'Vendor Billing City',
          'Vendor Billing State',
          'Is this document cancelled',
        
        ];
    }
}





