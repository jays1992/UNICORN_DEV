<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\GSTR;
use Maatwebsite\Excel\Facades\Excel;














class GSTR implements FromCollection, WithHeadings
{


 function __construct($SGLID,$From_Date,$To_Date,$BranchName,$CYID) {
        $this->SGLID = $SGLID;
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;    
        $this->CYID = $CYID;
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

        //dd($this->From_Date); 
        

        $SGLID=implode(",",$this->SGLID);
        $BranchName=implode(",",$this->BranchName);      

       



      return collect( $data=DB::select("SELECT distinct 
      A.SIDT as Invoice_Date,
       A.SINO as Invoice_No,
      C.CCODE as CustomerCode,
      C.NAME as CustomerName,
      C.GSTIN as GST,
       F.NAME AS STATEPLACEOFSUPPLY, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
      B.SIMAIN_QTY as QTY, 
      I.UOMCODE AS UOM,
      B.RATEPUOM AS RATE,
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN B.DISCOUNT_AMT ELSE
      (((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100) END AS NUMERIC(14,2)) AS DISCOUNTAMT,
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT) ELSE
      ((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100)) END AS NUMERIC(14,2)) AS TAXABLEAMT,
      B.CGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.CGST)/100) ELSE
      
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.CGST)/100) END AS NUMERIC(14,2)) AS CGSTAMT,
      B.SGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.SGST)/100) ELSE
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.SGST)/100) END AS NUMERIC(14,2)) AS SGSTAMT,
      B.IGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.IGST)/100) ELSE
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      
      (CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT) ELSE
      ((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100)) END AS NUMERIC(14,2))+
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.CGST)/100) ELSE
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.CGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.SGST)/100) ELSE
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.SGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SIMAIN_QTY*B.RATEPUOM)-B.DISCOUNT_AMT)*B.IGST)/100) ELSE
      ((((B.SIMAIN_QTY*B.RATEPUOM)-(((B.SIMAIN_QTY*B.RATEPUOM)*B.DISPER)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      ) AS TOTAL_BILL_AMOUNT,
      
      
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.IGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      CASE WHEN A.REVERSE_GST = 1 THEN 'YES' ELSE 'NO' END AS REVERSEGST,
      J.CADD AS BILL_ADDRESS,L.NAME AS BILL_CITY, K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_SLSI01_HDR A(NOLOCK) INNER JOIN TBL_TRN_SLSI01_MAT B(NOLOCK) ON A.SIID = B.SIID_REF
      INNER JOIN TBL_MST_CUSTOMER C(NOLOCK) ON A.SLID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_CUSTOMERLOCATION E(NOLOCK) ON A.SHIPTO = E.CLID AND C.CID = E.CID_REF
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.MAIN_SIUOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CUSTOMERLOCATION J(NOLOCK) ON A.BILLTO = J.CLID AND C.CID = J.CID_REF
      LEFT JOIN TBL_MST_STATE K(NOLOCK) ON J.STID_REF = K.STID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON J.CITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID AND  A.BRID_REF IN ($BranchName)
      AND A.SLID_REF IN ($SGLID) AND A.SIDT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      UNION
      SELECT distinct 
      A.SSI_DT as Invoice_Date,
       A.SSI_NO as Invoice_No,
       C.CCODE as CustomerCode,
       C.NAME as CustomerName,
       C.GSTIN as GST, 
       F.NAME AS STATEPLACEOFSUPPLY, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME, 
      H.HSNCODE AS HSN_SAC_CODE,
      B.SSI_QTY as QTY,
      I.UOMCODE AS UOM,
      B.RATE_PRUOM AS RATE,
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN B.DISCOUNT_AMT ELSE
      (((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100) END AS NUMERIC(14,2)) AS DISCOUNTAMT,
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT) ELSE
      ((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100)) END AS NUMERIC(14,2)) AS TAXABLEAMT,
      B.CGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.CGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2)) AS CGSTAMT,
      B.SGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.SGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2)) AS SGSTAMT,
      B.IGST,CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.IGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2)) AS IGSTAMT,
      
      (CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT) ELSE
      ((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100)) END AS NUMERIC(14,2))+
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.CGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.CGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.SGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.SGST)/100) END AS NUMERIC(14,2))
      +
      CAST(CASE WHEN B.DISCOUNT_AMT > '.00' THEN ((((B.SSI_QTY*B.RATE_PRUOM)-B.DISCOUNT_AMT)*B.IGST)/100) ELSE
      ((((B.SSI_QTY*B.RATE_PRUOM)-(((B.SSI_QTY*B.RATE_PRUOM)*B.DISCOUNT_PER)/100))*B.IGST)/100) END AS NUMERIC(14,2))
      ) AS TOTAL_BILL_AMOUNT,
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.IGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      CASE WHEN A.REVERSE_GST = 1 THEN 'YES' ELSE 'NO' END AS REVERSEGST,
      J.CADD AS BILL_ADDRESS,L.NAME AS BILL_CITY, K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_SLSI02_HDR A(NOLOCK) INNER JOIN TBL_TRN_SLSI02_MAT B(NOLOCK) ON A.SSIID = B.SSIID_REF
      INNER JOIN TBL_MST_CUSTOMER C(NOLOCK) ON A.SGLID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_CUSTOMERLOCATION E(NOLOCK) ON A.SHIPTO_REF = E.CLID AND C.CID = E.CID_REF
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.UOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CUSTOMERLOCATION J(NOLOCK) ON A.BILLTO_REF = J.CLID AND C.CID = J.CID_REF
      LEFT JOIN TBL_MST_STATE K(NOLOCK) ON J.STID_REF = K.STID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON J.CITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
      AND A.SGLID_REF IN ($SGLID) AND A.SSI_DT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'
      UNION
      SELECT distinct 
      A.SRDT as Invoice_Date,
      A.SRNO as Invoice_No,
      C.CCODE as CustomerCode,
      C.NAME as CustomerName,
      C.GSTIN as GST, 
      F.NAME AS STATEPLACEOFSUPPLY, 
      CASE WHEN G.ITEM_TYPE = 'S-SERVICE' THEN 'S' ELSE 'G' END AS ITEM_TYPE,
      G.NAME AS ITEMNAME,
       H.HSNCODE AS HSN_SAC_CODE,
      B.SRQTY as QTY, 
      I.UOMCODE AS UOM,
      B.SRRATE AS RATE,
      CAST('0.00' AS NUMERIC(14,2))  AS DISCOUNTAMT,
      CAST((B.SRQTY*B.SRRATE) AS NUMERIC(14,2)) AS TAXABLEAMT,
      B.CGST,CAST((((B.SRQTY*B.SRRATE)*B.CGST)/100) AS NUMERIC(14,2)) AS CGSTAMT,
      B.SGST,CAST((((B.SRQTY*B.SRRATE)*B.SGST)/100) AS NUMERIC(14,2)) AS SGSTAMT,
      B.IGST,CAST((((B.SRQTY*B.SRRATE)*B.IGST)/100) AS NUMERIC(14,2)) AS IGSTAMT,
      
      (CAST((B.SRQTY*B.SRRATE) AS NUMERIC(14,2))+
      CAST((((B.SRQTY*B.SRRATE)*B.CGST)/100) AS NUMERIC(14,2))
      +
      CAST((((B.SRQTY*B.SRRATE)*B.SGST)/100) AS NUMERIC(14,2))
      +
      CAST((((B.SRQTY*B.SRRATE)*B.IGST)/100) AS NUMERIC(14,2))
      ) AS TOTAL_BILL_AMOUNT,
      
      
      
      
      CASE WHEN D.DESCRIPTIONS LIKE '%UN%REGISTERED%' THEN 'YES' ELSE 'NO' END AS BILLOFSUPPLY,
      CASE WHEN (B.CGST = '.00' AND B.IGST = '.00' AND B.IGST = '.00' OR C.EXE_GST = 1) THEN 'YES' ELSE 'NO' END AS EXEMPTGST,
      'NO' AS REVERSEGST,
      J.CADD AS BILL_ADDRESS,L.NAME AS BILL_CITY, K.NAME AS BILL_STATE, 
      CASE WHEN A.STATUS = 'C' THEN 'YES' ELSE 'NO' END AS CANCELSTATUS
      FROM TBL_TRN_SLSR01_HDR A(NOLOCK) INNER JOIN TBL_TRN_SLSR01_MAT B(NOLOCK) ON A.SRID = B.SRID_REF
      INNER JOIN TBL_MST_CUSTOMER C(NOLOCK) ON A.SLID_REF = C.SLID_REF AND A.CYID_REF = C.CYID_REF AND A.BRID_REF = C.BRID_REF
      LEFT JOIN TBL_MST_GSTTYPE D(NOLOCK) ON C.GSTTYPE = D.GSTID AND C.CYID_REF = D.CYID_REF AND C.BRID_REF = D.BRID_REF AND (D.DEACTIVATED = 0 OR D.DEACTIVATED IS NULL)
      LEFT JOIN TBL_MST_CUSTOMERLOCATION E(NOLOCK) ON A.SHIP_TO = E.CLID AND C.CID = E.CID_REF
      LEFT JOIN TBL_MST_STATE F(NOLOCK) ON E.STID_REF = F.STID
      INNER JOIN TBL_MST_ITEM G(NOLOCK) ON B.ITEMID_REF = G.ITEMID AND A.CYID_REF = G.CYID_REF
      LEFT JOIN TBL_MST_HSN H(NOLOCK) ON G.HSNID_REF = H.HSNID AND G.CYID_REF = H.CYID_REF
      LEFT JOIN TBL_MST_UOM I(NOLOCK) ON B.MAIN_SRUOMID_REF = I.UOMID
      LEFT JOIN TBL_MST_CUSTOMERLOCATION J(NOLOCK) ON A.BILL_TO = J.CLID AND C.CID = J.CID_REF
      LEFT JOIN TBL_MST_STATE K(NOLOCK) ON J.STID_REF = K.STID
      LEFT JOIN TBL_MST_CITY L(NOLOCK) ON J.CITYID_REF = L.CITYID
      INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON A.BRID_REF = M.BRID
      WHERE A.CYID_REF = $this->CYID AND  A.BRID_REF IN ($BranchName)
      AND A.SLID_REF IN ($SGLID) AND A.SRDT BETWEEN '$this->From_Date' AND '$this->To_Date' AND A.STATUS = 'A'"));
      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
        
        return [
          'Invoice Date',
          'Invoice No',
          'Customer Code',
          'Customer Name',
          'Customer GSTIN',
          'State place of supply',
          'Is the item a GOOD (G) or SERVICE (S)',
          'Item Description',
          'HSN OR SAC Code',  
          'Item Quantity',
          'Item Unit of Measurement',
          'Item Rate',
          'Total Item Discount Amount',
          'Item Taxable Value',
          'CGST Rate',
          'CGST Amount',
          'SGST Rate',
          'SGST Amount',
          'IGST Rate',
          'IGST Amount',
          'Total Invoice Amount',
          'Is this a bill of supply?',
          'Is this a Nil Rated/Exempt/NonGST Item?',
          'Is Reverse Charge Applicable?',
          'Customer Billing Address',
          'Customer Billing City',
          'Customer Billing State',
          'Is this document cancelled',
        
        ];
    }
}





