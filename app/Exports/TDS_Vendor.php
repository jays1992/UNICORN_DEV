<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\TDS_Vendor_Detail;
use Maatwebsite\Excel\Facades\Excel;














class TDS_Vendor implements FromCollection, WithHeadings
{


 function __construct($SLID,$From_Date,$To_Date,$BranchName,$CYID_REF) {
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;
        $this->CYID = $CYID_REF;
        $this->SLID = $SLID;


 
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

      //dd($this->CYID); 
        //dd($this->From_Date); 
             
        $BranchName=implode(",",$this->BranchName);          
        $SLID=implode(",",$this->SLID);
    

      // dd($GLID);
		//dd($AGID);



      return collect( $data=DB::select("SELECT B.VID_REF AS SLID_REF,C.VCODE AS CODE, C.NAME AS VENDORNAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.SPI_NO as Invoice_No, B.VENDOR_INNO as VENDORINV_NUMBER, B.SPI_DT as Invoice_Date, B.REMARKS AS REMARKS,
	CAST(SUM((F.BILL_QTY*F.BILL_RATEPUOM)) AS NUMERIC(14,2)) AS BASICAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.IGST)/100) AS NUMERIC(14,2)) AS IGSTAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.CGST)/100) AS NUMERIC(14,2)) AS CGSTAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.SGST)/100) AS NUMERIC(14,2)) AS SGSTAMT,
	SUM(DISTINCT A.ASSESSABLE_VL_TDS) AS Assessable_Value, A.TDS_RATE AS TDSRATE,
	CAST(SUM(DISTINCT ( A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
	FROM TBL_TRN_PRPB02_TDS A INNER JOIN TBL_TRN_PRPB02_HDR B ON A.SPIID_REF = B.SPIID
	INNER JOIN TBL_TRN_PRPB02_SRV F (NOLOCK) ON B.SPIID =F.SPIID_REF
	INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON B.VID_REF = C.SLID_REF AND B.CYID_REF = C.CYID_REF AND B.BRID_REF = C.BRID_REF
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E(NOLOCK) ON A.TDSID_REF = E.HOLDINGID
	INNER JOIN TBL_MST_SECTION D(NOLOCK) ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
	AND B.VID_REF IN ($SLID)
	AND B.SPI_DT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.SPI_NO, B.SPI_DT,B.VID_REF,C.VCODE, C.NAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,B.VENDOR_INNO,B.REMARKS,A.TDS_RATE
	UNION
	SELECT B.VID_REF AS SLID_REF,C.VCODE AS CODE, C.NAME AS VENDORNAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.PB_DOCNO as Invoice_No,B.VENDOR_INNO as VENDORINV_NUMBER, B.PB_DOCDT as Invoice_Date, B.REMARKS AS REMARKS,
	CAST(SUM((F.BILL_QTY*F.BILL_RATEPUOM)) AS NUMERIC(14,2)) AS BASICAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.IGST)/100) AS NUMERIC(14,2)) AS IGSTAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.CGST)/100) AS NUMERIC(14,2)) AS CGSTAMT,
	CAST(SUM(((F.BILL_QTY*F.BILL_RATEPUOM)*F.SGST)/100) AS NUMERIC(14,2)) AS SGSTAMT,
	SUM(A.ASSESSABLE_VL_TDS) AS Assessable_Value,A.TDS_RATE AS TDSRATE,
	CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
	FROM TBL_TRN_PRPB01_TDS A INNER JOIN TBL_TRN_PRPB01_HDR B ON A.PBID_REF = B.PBID
	INNER JOIN TBL_TRN_PRPB01_MAT F(NOLOCK) ON B.PBID = F.PBID_REF
	INNER JOIN TBL_MST_VENDOR C(NOLOCK) ON B.VID_REF = C.SLID_REF
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E(NOLOCK) ON A.TDSID_REF = E.HOLDINGID
	INNER JOIN TBL_MST_SECTION D(NOLOCK) ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
	AND B.VID_REF IN ($SLID)
	AND B.PB_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.PB_DOCNO, B.PB_DOCDT,B.VID_REF,C.VCODE, C.NAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,B.VENDOR_INNO,B.REMARKS,A.TDS_RATE
	UNION
	SELECT B.VID_REF AS SLID_REF,C.VCODE AS CODE, C.NAME AS VENDORNAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.PII_NO as Invoice_No, B.VENDOR_INVOICE_NO as VENDORINV_NUMBER, B.PII_DT as Invoice_Date, B.REMARKS AS REMARKS,
	CAST(SUM((F.BILL_QTY*F.RATE_ASP_MU)) AS NUMERIC(14,2)) AS BASICAMT,
	CAST(SUM(((F.BILL_QTY*F.RATE_ASP_MU)*F.IGST)/100) AS NUMERIC(14,2)) AS IGSTAMT,
	0 AS CGSTAMT,
	0 AS SGSTAMT,
	SUM(A.ASSESSABLE_VL_TDS) AS Assessable_Value,A.TDS_RATE AS TDSRATE,
	CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
	FROM TBL_TRN_PII_TDS A INNER JOIN TBL_TRN_PII_HDR B ON A.PII_ID_REF = B.PII_ID
	INNER JOIN TBL_TRN_PII_MAT F (NOLOCK) ON B.PII_ID = F.PII_ID_REF
	INNER JOIN TBL_MST_VENDOR C ON B.VID_REF = C.SLID_REF
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E ON A.TDSID_REF = E.HOLDINGID
	INNER JOIN TBL_MST_SECTION D ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID  AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
	AND B.VID_REF IN ($SLID)
	AND B.PII_DT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.PII_NO, B.PII_DT,B.VID_REF,C.VCODE, C.NAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,B.VENDOR_INVOICE_NO,B.REMARKS,A.TDS_RATE
	UNION
	SELECT B.SLID_REF AS SLID_REF,C.VCODE AS CODE, C.NAME AS VENDORNAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.AP_DOC_NO as Invoice_No, NULL as VENDORINV_NUMBER, B.AP_DOC_DT as Invoice_Date, B.REASON_DRCR_NOTE AS REMARKS,
	CAST(SUM(F.AMT) AS NUMERIC(14,2)) AS BASICAMT,
	CAST(SUM((F.AMT*F.IGST)/100) AS NUMERIC(14,2)) AS IGSTAMT,
	CAST(SUM((F.AMT*F.CGST)/100) AS NUMERIC(14,2)) AS CGSTAMT,
	CAST(SUM((F.AMT*F.SGST)/100) AS NUMERIC(14,2)) AS SGSTAMT,
	SUM(A.ASSESSABLE_VL_TDS) AS Assessable_Value,A.TDS_RATE AS TDSRATE,
	CASE WHEN B.AP_TYPE= 'Debit Note' THEN -CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) ELSE CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) END AS TDS_AMOUNT
	FROM TBL_TRN_FNAPDRCR_TDS A INNER JOIN TBL_TRN_FNAPDRCR_HDR B ON A.APDRCRID_REF = B.APDRCRID
	INNER JOIN TBL_TRN_FNAPDRCR_DET F (NOLOCK) ON B.APDRCRID = F.APDRCRID_REF
	INNER JOIN TBL_MST_VENDOR C ON B.SLID_REF = C.SLID_REF
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E ON A.TDSID_REF = E.HOLDINGID
	INNER JOIN TBL_MST_SECTION D ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
	AND B.SLID_REF IN ($SLID)
	AND B.AP_DOC_DT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.AP_DOC_NO, B.AP_DOC_DT,B.AP_TYPE,B.SLID_REF,C.VCODE, C.NAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,B.REASON_DRCR_NOTE,A.TDS_RATE
	UNION
	SELECT B.CUSTMER_VENDOR_ID AS SLID_REF,C.VCODE AS CODE, C.NAME AS VENDORNAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.PAYMENT_NO as Invoice_No, NULL as VENDORINV_NUMBER, B.PAYMENT_DT as Invoice_Date, B.REMARKS AS REMARKS,
	CAST(SUM(ISNULL(F.PAYMENT_AMT,B.TOAL_AMOUNT)) AS NUMERIC(14,2))AS BASICAMT,
	0 AS IGSTAMT,
	0 AS CGSTAMT,
	0 AS SGSTAMT,
	SUM(A.ASSESSABLE_VL_TDS) AS Assessable_Value,A.TDS_RATE AS TDSRATE,
	CAST(SUM((A.ASSESSABLE_VL_TDS*A.TDS_RATE)/100) AS NUMERIC(14,2)) AS TDS_AMOUNT
	FROM TBL_TRN_PAYMENT_TDS A INNER JOIN TBL_TRN_PAYMENT_HDR B ON A.PAYMENTID_REF = B.PAYMENTID
	LEFT JOIN TBL_TRN_PAYMENT_INVOICE F (NOLOCK) ON B.PAYMENTID = F.PAYMENTID_REF
	INNER JOIN TBL_MST_VENDOR C ON B.CUSTMER_VENDOR_ID = C.SLID_REF
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E ON A.TDSID_REF = E.HOLDINGID
	INNER JOIN TBL_MST_SECTION D ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A' AND B.PAYMENT_FOR = 'VENDOR'
	AND B.CUSTMER_VENDOR_ID IN ($SLID)
	AND B.PAYMENT_DT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.PAYMENT_NO, B.PAYMENT_DT,B.CUSTMER_VENDOR_ID,C.VCODE, C.NAME,C.PANNO,D.SECTION_CODE,D.SECTION_NAME,B.REMARKS,A.TDS_RATE
	UNION
	SELECT NULL AS SLID_REF,NULL AS CODE, NULL AS VENDORNAME,NULL AS PANNO,D.SECTION_CODE,D.SECTION_NAME,
	B.MJV_NO as Invoice_No, NULL as VENDORINV_NUMBER, B.MJV_DT as Invoice_Date, B.REMARKS AS REMARKS,
	NULL AS BASICAMT,0 AS IGSTAMT,0 AS CGSTAMT,0 AS SGSTAMT,NULL AS Assessable_Value,NULL AS TDSRATE,
	CAST(SUM(A.CR_AMT-A.DR_AMT) AS NUMERIC(14,2)) AS TDS_AMOUNT
	FROM TBL_TRN_MJRV01_ACC A INNER JOIN TBL_TRN_MJRV01_HDR B ON A.MJVID_REF=B.MJVID
	INNER JOIN TBL_MST_BRANCH M(NOLOCK) ON B.BRID_REF = M.BRID
	INNER JOIN TBL_MST_WITHHOLDING E ON A.GLID_REF = E.TDS_GLID_REF
	INNER JOIN TBL_MST_SECTION D ON E.SECTIONID_REF = D.SECTIONID
	WHERE B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName) AND B.STATUS = 'A'
	AND B.MJV_DT BETWEEN '$this->From_Date' AND '$this->To_Date'
	GROUP BY B.MJV_NO, B.MJV_DT,D.SECTION_CODE,D.SECTION_NAME,B.REMARKS"));

      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
    

        return [
			'Vendor ID',
          'Vendor Code',
          'Vendor Name',
		  'PAN No',
		  'TDS Particulars',
		  'TDS Section',
          'Invoice No',
		  'Vendor Invoice No.',
          'Invoice Date',
		  'Remarks',
		  'Basic Amount',
		  'IGST Amount',
		  'CGST Amount',
		  'SGST Amount',
          'Assessable Amount',
		  'TDS Rate',
          'TDS Amount',           
         ];
         
         
   
    }
}





